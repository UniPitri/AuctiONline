FORMAT: 1A
HOST: https://auctionline-is2.herokuapp.com/

# API AuctiONline

Documentazione API AuctiONline. Le API permettono di gestire la compravendita di beni attraverso le aste.


## /api/v1/autenticazione

### Autentica utente [POST]

Verifica le credenziali inserite dall'utente e in caso positivo crea un token di autenticazione per l'utente.

+ Request (application/json)

    + Attributes
        + username (required, string) - Username dell'utente
        + password (required, string) - Password dell'utente
      
+ Response 201 (application/json)

    Autenticazione avvenuta con successo. Invio token e redirect alla pagina del catalogo.

    + Body
    {
        "success": true,
        "message": "Enjoy your token!",
        "token": token,
        "email": user.email,
        "id": user._id,
        "self": "api/v1/" + user._id
    }

+ Response 401 (application/json)

    Autenticazione fallita. Invio messaggio di errore.
    
    + Body
    {
        "success": false, 
        "message": "Autenticazione fallita. Utente o password errati"
    }

## /api/v1/registrazione

### Registra utente [POST]

Ritorna la lista tutte le aste presenti sul catalogo che devono ancora iniziare.

+ Request (application/json)

    + Attributes
        + email (required, string) - Mail dell'account da creare
        + username (required, string) - Username dell'account da creare
        + password (required, string) - Password dell'account da creare
        
+ Response 201 (application/json)

    Creazione account avvenuta con successo. Invio token e redirect alla pagina del catalogo.

    + Body
    {
        "success": true,
        "message": "Nuovo Utente registrato con successo!",
        "token": token,
        "email": newUser.email,
        "id": newUser._id,
        "self": "api/v1/" + newUser._id
    }         

+ Response 409 (application/json)

    Creazione account fallita. Esiste già un account con la mail inserita.

    + Body
    {
        "success": false, 
        "message": "Email gia in utilizzo"
    }
        
+ Response 409 (application/json)

    Creazione account fallita. Esiste già un account con l'username inserito.

    + Body
    {
        "success": false, 
        "message": "Username gia in utilizzo"
    }   

## /api/v1/aste

### Visualizza catalogo aste [GET]

Recupera la lista delle aste disponibili.

+ Request (application/json)
      
+ Response 200 (application/json)

    Catalogo delle aste disponibili è pronta.

    + Body
    [
        {
            "self": "/api/v1/aste/" + asta1._id,
            "dettagliProdotto": asta1.DeattgliProdotto,
            "dettagliAsta": asta1.DettagliAsta
            "preferenze": asta1.Preferenze
        },
        {
            "self": "/api/v1/aste/" + asta2._id,
            "dettagliProdotto": asta2.DeattgliProdotto,
            "dettagliAsta": ast2.DettagliAsta
            "preferenze": asta2.Preferenze
        }
    ]

### Aggiungi asta al catalogo [POST]

Aggiunge una nuova asta al catalogo, dopo aver verificato la correttezza dei dati inseriti dall'utente.

+ Request

    + Attributes
        + token (required, string) - Token di autenticazione dell'utente che vuole creare l'asta
        + nome (required, string) - Nome del prodotto che verrà messo all'asta
        + categorie (required, [string]) - Categorie associate al prodotto che verrà messo all'asta (necessaria una)
        + descrizione (required, string) - Descrizione del prodotto che verrà messo all'asta
        + foto (required, [strint]) - Riferimenti alle foto del prodotto che verrà messo all'asta (necessaria uno)
        + inizio (required, string) - Data e ora inizio dell'asta
        + fine (required, string) - Data e ora fine dell'asta
        + tipo (required, number) - Tipo dell'asta (0 a Busta chiusa, 1 all'inglese)
        + prezzoMinimo (optional, number) - Prezzo minimo richiesto per vendere il prodotto
      
+ Response 201 (application/json)

    Creazione asta avvenuta con successo. Redirect alla pagina del catalogo.
    
    + Body
    {
        "success": true,
        "message": "Nuova asta aggiunta correttamente",
        "self": "api/v1/" + newAsta._id
    }

+ Response 400 (application/json)
    
    Creazione asta fallita. La data e/o l'ora specificata in inizio/fine non è valida.
    
    + Body
    {
        "success": false,
        "message": "Attributo Inizio o Fine non valido"
    }

+ Response 400 (application/json)
    
    Creazione asta fallita. Il prezzo minimo inserito dall'utente non è un numero.
    
    + Body
    {
        "success": false,
        "message": "Attributo prezzo minimo non valido"
    }

+ Response 400 (application/json)
    
    Creazione asta fallita. Uno o più file inseriti dall'utente non sono immagini .jpeg o .png.
    
    + Body
    {
        "success": false,
        "message": "Estensione immagine inserita non valida"
    }

## /api/v1/aste/:id

### Formula nuova offerta [PUT]

Formula una nuova offerta per il prodotto identificato da id.

+ Request (application/json)

    + Attributes
        +id (required,string) - ID dell'asta per cui si sta offrendo
        +prezzo (required, number) - Offerta fatta dall'utente 

+ Response 200 (application/json)

    La nuova offerta è stata correttamente effettuata.

    + Body
    {
        "success": true,
        "message": "Nuova offerta avvenuta con successo"
    }

+ Response 404 (application/json)

    Offerta fallita. L'asta non esiste.

    + Body
    {
        "success": false,
        "message": "Asta non trovata"
    }

+ Response 400 (application/json)

    Offerta fallita. L'asta non esiste.

    + Body
    {
        "success": false,
        "message": "Prezzo troppo basso"
    }

## /api/v1/astePreferite

### Aggiungi nuova asta preferita [POST]

Aggiunge nuova asta alla lista delle aste preferite dell'utente.

+ Request (application/json)

    + Attributes
        + token (required, string) - Token di autenticazione dell'utente che vuole aggiungere l'asta ai preferiti
        + userID(required, string) - ID dell'utente che vuole aggiungere l'asta ai preferiti
        + idAsta (required, string) - ID dell'asta da inserire come preferita

+ Response 201 (application/json)

    L'asta è stata aggiunta tra i preferiti con successo.

    + Body
    {
        "success": true,
        "message": "Asta aggiunta ai preferiti"
        "self": '/api/v1/aste/' + req.body.idAsta
    }

+ Response 409 (application/json)

    Aggiunta asta ai preferiti fallita. L'asta scelta è già tra i preferiti.
    
    + Body
    {
        "success": false,
        "message": "Asta già presente tra i preferiti"
    }